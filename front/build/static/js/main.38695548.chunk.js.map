{"version":3,"sources":["img/icons/creditCard.png","img/icons/moneyStack.png","img/red-low-poly-bg.jpg","img/icons/bank.png","components/CountrySelector.js","components/AmountInput.js","components/FormInput.js","components/QuoteForm.js","components/Card.js","components/Cards.js","util.js","components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","renderCountrySuggestion","countrySuggestion","Flag","Flags","iso2","className","name","CountrySelector","direction","country","setCountry","setCurrency","useState","input","setInput","countryData","countries","setCountries","inputProps","placeholder","value","onChange","event","newValue","id","htmlFor","suggestions","onSuggestionsFetchRequested","searchValue","inputValue","trim","toLowerCase","inputLength","length","filter","slice","getCountries","onSuggestionsClearRequested","getSuggestionValue","correspondingCurrency","iso2ToCurrencyMap","renderSuggestion","shouldRenderSuggestions","theme","container","containerOpen","inputOpen","inputFocused","suggestionsContainer","suggestionsContainerOpen","suggestionsList","suggestion","suggestionFirst","suggestionHighlighted","sectionContainer","sectionContainerFirst","sectionTitle","AmountInput","amount","setAmount","currency","type","target","disabled","toUpperCase","FormInput","props","children","QuoteForm","handleData","iso3","senderCountry","setSenderCountry","recipientCountry","setRecipientCountry","senderCurrency","setSenderCurrency","recipientCurrency","setRecipientCurrency","senderAmount","setSenderAmount","recipientAmount","setRecipientAmount","useEffect","onSubmit","preventDefault","quoteRequest","console","log","fetch","crossDomain","method","headers","body","JSON","stringify","then","result","json","quoteResponse","request","response","Card","quote","serviceName","finalAmount","details","hue","logoFileName","isTopQuote","bestQuote","description","bonus","style","backgroundImage","Math","round","Number","EPSILON","officialName","src","process","alt","creditCardIcon","moneyStackIcon","bankIcon","map","point","index","key","exists","sponsor","cardDetails","transferwise","easysend","spoko","skrill","azimo","Cards","data","quotes","Array","isArray","array","size","successfulQuotes","status","sort","amountA","amountB","parseFloat","quotesChunkedToRows","ceil","_","bestQuoteNameOfficial","bestQuoteDetails","chunk","Quotes","setQuotes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38695548.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/creditCard.d94847c1.png\";","module.exports = __webpack_public_path__ + \"static/media/moneyStack.2052c3df.png\";","module.exports = __webpack_public_path__ + \"static/media/red-low-poly-bg.21a1570b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bank.a64d1dc8.png\";","import React, { useState } from \"react\";\n\nimport Autosuggest from \"react-autosuggest\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport \"../css/country-selector.scss\";\nimport countryData from \"../data/countryData.json\";\nimport iso2ToCurrencyMap from \"../data/iso2-currency.json\";\n\n// searchValue (string)\nconst getCountries = (searchValue) => {\n  const inputValue = searchValue.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0\n    ? countryData\n    : countryData.filter(\n        (country) =>\n          country.name.toLowerCase().slice(0, inputLength) === inputValue\n      );\n};\n\nconst renderCountrySuggestion = (countrySuggestion) => {\n  const Flag = Flags[countrySuggestion.iso2];\n\n  return (\n    <>\n      {Flag && <Flag className=\"country-selector__flag\" />}\n      <span>{countrySuggestion.name}</span>\n    </>\n  );\n};\n\nconst CountrySelector = ({ direction, country, setCountry, setCurrency }) => {\n  const [input, setInput] = useState(country.name);\n  const [countries, setCountries] = useState(countryData);\n\n  const inputProps = {\n    placeholder: \"Выберите страну\",\n    value: input,\n    onChange: (event, { newValue }) => setInput(newValue),\n  };\n\n  return (\n    <>\n      <label\n        id={`country-selector__label_${direction}`}\n        className=\"quote-form__label\"\n        htmlFor={`country-selector_${direction}`}\n      >\n        {direction === \"sender\" ? \"Страна отправления\" : \"Страна получения\"}:\n      </label>\n      <Autosuggest\n        id={`country-selector__${direction}`}\n        suggestions={countries}\n        // Value (string) passed from inputProps\n        onSuggestionsFetchRequested={({ value }) =>\n          setCountries(getCountries(value))\n        }\n        onSuggestionsClearRequested={() => setCountries([])}\n        getSuggestionValue={(country) => {\n          setCountry(country);\n\n          const correspondingCurrency = iso2ToCurrencyMap[country.iso2] || \"\";\n          setCurrency(correspondingCurrency);\n\n          return country.name;\n        }}\n        renderSuggestion={renderCountrySuggestion}\n        shouldRenderSuggestions={() => true}\n        inputProps={inputProps}\n        theme={{\n          container:\n            \"country-selector__container block_height_std quote-form__block_width_full quote-form__input block_borders quote-form__input-wrapper_padded\",\n          containerOpen: \"country-selector__container_open\",\n          input: \"country-selector__input quote-form__block_padded\",\n          inputOpen: \"country-selector__input_open\",\n          inputFocused: \"country-selector__input_focused\",\n          suggestionsContainer:\n            \"country-selector__suggestion-container quote-form__block_width_full\",\n          suggestionsContainerOpen:\n            \"country-selector__suggestion-container_open\",\n          suggestionsList: \"country-selector__suggestion-list\",\n          suggestion: \"country-selector__suggestion block_height_std\",\n          suggestionFirst: \"country-selector__suggestion_first\",\n          suggestionHighlighted: \"country-selector__suggestion_highlighted\",\n          sectionContainer: \"country-selector__section-container\",\n          sectionContainerFirst: \"country-selector__section-container_first\",\n          sectionTitle: \"country-selector__section-title\",\n        }}\n      />\n    </>\n  );\n};\n\nexport default CountrySelector;\n","import React from \"react\";\n\nconst AmountInput = ({\n  direction,\n  amount,\n  setAmount,\n  currency,\n  setCurrency,\n}) => {\n  return (\n    <div\n      id={`amount-input_${direction}`}\n      className=\"amount-input quote-form__block_width_full\"\n    >\n      <legend className=\"quote-form__label\">\n        {direction === \"sender\" ? \"Вы отправляете\" : \"Получают\"}:\n      </legend>\n      <div className=\"amount-input__fields quote-form__input quote-form__input-wrapper_padded block_borders block_height_std\">\n        <input\n          type=\"number\"\n          id={`amount-input_${direction}`}\n          className=\"amount-input__field amount-input__field_numeric\"\n          placeholder=\"Количество\"\n          value={amount}\n          onChange={(event) => setAmount(event.target.value)}\n          disabled={direction === \"recipient\"}\n        />\n\n        <select\n          id={`currency-selector_${direction}`}\n          className=\"amount-input__currency-selector\"\n          value={currency}\n          onChange={(event) => setCurrency(event.target.value)}\n        >\n          <option value=\"\" disabled>\n            Валюта\n          </option>\n          <option value={currency}>{currency.toUpperCase()}</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default AmountInput;\n","import React from \"react\";\n\nconst FormInput = (props) => (\n  <div className=\"quote-form__input-wrapper\">{props.children}</div>\n);\n\nexport default FormInput;\n","import React, { useEffect, useState } from \"react\";\n\nimport CountrySelector from \"./CountrySelector\";\nimport AmountInput from \"./AmountInput\";\nimport FormInput from \"./FormInput\";\n\nimport \"../css/quote-form.scss\";\n\nconst QuoteForm = ({ handleData }) => {\n  const [senderCountry, setSenderCountry] = useState({\n    name: \"\",\n    iso3: \"\",\n    iso2: \"\",\n  });\n  const [recipientCountry, setRecipientCountry] = useState({\n    name: \"\",\n    iso3: \"\",\n    iso2: \"\",\n  });\n  const [senderCurrency, setSenderCurrency] = useState(\"\");\n  const [recipientCurrency, setRecipientCurrency] = useState(\"\");\n  const [senderAmount, setSenderAmount] = useState(\"\");\n  const [recipientAmount, setRecipientAmount] = useState(\"\");\n\n  // TODO: Custom usePreviousValue hook.\n  useEffect(() => senderAmount !== \"\" && setRecipientAmount(\"\"), [\n    senderAmount,\n  ]);\n  useEffect(() => recipientAmount !== \"\" && setSenderAmount(\"\"), [\n    recipientAmount,\n  ]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const quoteRequest = {\n      senderCountry: senderCountry.iso3,\n      recipientCountry: recipientCountry.iso3,\n      senderCurrency,\n      recipientCurrency,\n      senderAmount,\n    };\n\n    console.log(\"form submit\", quoteRequest);\n\n    fetch(\"/getQuote\", {\n      crossDomain: true,\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(quoteRequest),\n    })\n      .then((result) => { console.log(result); return result.json();})\n      .then((quoteResponse) =>\n        handleData({ request: quoteRequest, response: quoteResponse })\n      );\n  };\n\n  return (\n    <form className=\"quote-form quote-form_wide\" onSubmit={handleSubmit}>\n      <FormInput>\n        <CountrySelector\n          direction=\"sender\"\n          country={senderCountry}\n          setCountry={setSenderCountry}\n          setCurrency={setSenderCurrency}\n        />\n      </FormInput>\n\n      <FormInput>\n        <CountrySelector\n          direction=\"recipient\"\n          country={recipientCountry}\n          setCountry={setRecipientCountry}\n          setCurrency={setRecipientCurrency}\n        />\n      </FormInput>\n\n      <FormInput>\n        <AmountInput\n          direction=\"sender\"\n          amount={senderAmount}\n          setAmount={setSenderAmount}\n          currency={senderCurrency}\n          setCurrency={setSenderCurrency}\n        />\n      </FormInput>\n\n      <FormInput>\n        <AmountInput\n          direction=\"recipient\"\n          amount={recipientAmount}\n          setAmount={setRecipientAmount}\n          currency={recipientCurrency}\n          setCurrency={setRecipientCurrency}\n        />\n      </FormInput>\n\n      <button\n        type=\"submit\"\n        className=\"block_height_std quote-form__block_width_narrow quote-form__block_accent block_borders_none\"\n      >\n        Сравнить\n      </button>\n    </form>\n  );\n};\n\nexport default QuoteForm;\n","import React from \"react\";\n\nimport backgroundImage from \"../img/red-low-poly-bg.jpg\";\nimport bankIcon from \"../img/icons/bank.png\";\nimport creditCardIcon from \"../img/icons/creditCard.png\";\nimport moneyStackIcon from \"../img/icons/moneyStack.png\";\n\nconst Card = function ({\n  quoteRequest,\n  quote: { serviceName, amount: finalAmount },\n  details: {\n    name,\n    hue,\n    logoFileName,\n    isTopQuote,\n    bestQuote,\n    description,\n    bonus,\n  },\n}) {\n  return (\n    <div className=\"card block_borders_none\" style={{ backgroundImage }}>\n      <span className=\"card__bg\" style={{ filter: `hue-rotate(${hue}deg)` }}></span>\n      {isTopQuote && (\n        <section className=\"card__section card__top\">\n          <p>\n            {bestQuote.name === serviceName\n              ? \"лидер рейтинга!!!\"\n              : [\n                  \"на \",\n                  Math.round(\n                    (bestQuote.result - finalAmount + Number.EPSILON) * 100\n                  ) / 100,\n                  \"\",\n                  <span className=\"currency\">\n                    {quoteRequest.recipientCurrency}\n                  </span>,\n                  \" меньше чем у \",\n                  bestQuote.officialName,\n                ]}\n          </p>\n        </section>\n      )}\n      <section className=\"card__section card__logo-section\">\n        <img\n          className=\"card__logo\"\n          src={`${process.env.PUBLIC_URL}/img/logos/${logoFileName}`}\n          alt={`${serviceName} logo`}\n        />\n      </section>\n\n      <section className=\"card__section card__payment-methods-section\">\n        <div className=\"card__payment-methods-direction-section\">\n          <p className=\"card__payment-methods-direction\">платите</p>\n          <div className=\"card__payment-methods card__block block_center block_borders block_height_smaller card__block_width_smaller block_opaque_less\">\n            <img\n              className=\"card__payment-methods-icon\"\n              src={creditCardIcon}\n              alt=\"Payment Icon – Card\"\n            />\n            <img\n              className=\"card__payment-methods-icon\"\n              src={moneyStackIcon}\n              alt=\"Payment Icon – Cash\"\n            />\n            <img\n              className=\"card__payment-methods-icon\"\n              src={bankIcon}\n              alt=\"Payment Icon – Bank\"\n            />\n          </div>\n        </div>\n\n        <div className=\"card__payment-methods-direction-section\">\n          <p className=\"card__payment-methods-direction\">получаете</p>\n          <div className=\"card__payment-methods card__block block_center block_borders block_height_smaller card__block_width_smaller block_opaque_less\">\n            <img\n              className=\"card__payment-methods-icon\"\n              src={creditCardIcon}\n              alt=\"Payment Icon – Card\"\n            />\n            <img\n              className=\"card__payment-methods-icon\"\n              src={moneyStackIcon}\n              alt=\"Payment Icon – Cash\"\n            />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"card__section card__quote-section\">\n        <div className=\"card__quote card__quote_initial card__block block_center block_borders block_height_std block_opaque_more block_light\">\n          <p className=\"card__quote-data card__quote-data-input\">\n            {quoteRequest.senderAmount}\n            <span className=\"currency\">{quoteRequest.senderCurrency}</span>\n          </p>\n          <p className=\"card__quote-data card__quote-data-output\">\n            {finalAmount}\n            <span className=\"currency\">{quoteRequest.recipientCurrency}</span>\n          </p>\n        </div>\n      </section>\n\n      <section className=\"card__section card__quote-description-section\">\n        <ul className=\"card__quote-description\">\n          {description.map((point, index) => (\n            <li\n              key={`description-${index}`}\n              className=\"card__quote-description-point\"\n            >\n              <span className=\"card__quote-description-point-text\">\n                {point}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section className=\"card__section card__bonus-section\">\n        <div className=\"card__bonus block_center\">\n          <div className=\"card__bonus-value card__block block_center block_borders_none block_height_smaller card__block_width_smaller\">\n            <p>\n              + {bonus.exists ? \"N\" : \"0\"} <span className=\"currency\">CUR</span>\n            </p>\n          </div>\n          <p className=\"card__bonus-description card__label-under\">\n            {bonus.exists\n              ? `бонус от ${bonus.sponsor} всем новым клиентам за перевод свыше N CUR`\n              : \"выплаты клиентам не предусмотрены\"}\n          </p>\n        </div>\n      </section>\n\n      <section className=\"card__section card__quote-section\">\n        <div className=\"card__quote_regular card__block block_borders block_height_std block_opaque_less block_light\">\n          <p className=\"card__quote-data card__quote-data-output\">\n            {finalAmount}\n            <span className=\"currency\">{quoteRequest.recipientCurrency}</span>\n          </p>\n        </div>\n        <p className=\"card__label-under\">\n          последующие переводы с учетом комиссии\n        </p>\n      </section>\n\n      <section className=\"card__section card__button-section\">\n        <div className=\"card__button card__block block_borders block_center block_height_std block_opaque_more block_dark\">\n          <p className=\"card__button-text\">подробнее ➤</p>\n          <img className=\"card__button-icon\" src=\"\" alt=\"\" />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nimport { chunk } from \"../util\";\n\nimport \"../css/card.scss\";\n\nconst cardDetails = {\n  transferwise: {\n    name: \"TransferWise\",\n    logoFileName: \"transferwiseLogo.png\",\n    hue: 196,\n    bonus: { exists: true, sponsor: \"PayMentor.Club\" },\n    description: [\n      \"первый перевод для новых клиентов c учетом денежного бонуса\",\n      \"три первых перевода без комиссии\",\n    ],\n  },\n  easysend: {\n    name: \"EasySend\",\n    logoFileName: \"easysendLogo.svg\",\n    hue: 207,\n    bonus: { exists: true, sponsor: \"PayMentor.Club\" },\n    description: [\"первый перевод без комиссии.\"],\n  },\n  spoko: {\n    name: \"Spoko\",\n    logoFileName: \"spokoLogo.svg\",\n    hue: 48,\n    bonus: { exists: false },\n    description: [\"первый перевод без комиссии.\"],\n  },\n  skrill: {\n    name: \"Skrill\",\n    logoFileName: \"skrillLogo.png\",\n    hue: 298,\n    bonus: { exists: true, sponsor: \"PayMentor.Club\" },\n    description: [\n      \"первый перевод для новых клиентов с учетом денежного бонуса\",\n    ],\n  },\n  azimo: {\n    name: \"Azimo\",\n    logoFileName: \"azimoLogo.svg\",\n    hue: 176,\n    bonus: { exists: true, sponsor: \"Azimo\" },\n    description: [\n      \"первый перевод для новых клиентов c учетом денежного бонуса.\",\n      \"два первых перевода без комиссии.\",\n    ],\n  },\n};\n\nconst Cards = ({ data: { request, response: quotes } }) => {\n  if (!Array.isArray(quotes)) {\n    return false;\n  }\n\n  const successfulQuotes = quotes.filter((quote) => quote.status === \"success\");\n\n  if (successfulQuotes.length) {\n    successfulQuotes.sort(({ result: amountA }, { result: amountB }) =>\n      parseFloat(amountA) > parseFloat(amountB) ? -1 : 1\n    );\n    const quotesChunkedToRows = chunk(successfulQuotes, 3);\n\n    const bestQuote = successfulQuotes[0];\n    const { name: bestQuoteNameOfficial } = cardDetails[bestQuote.name];\n    const bestQuoteDetails = {\n      ...bestQuote,\n      officialName: bestQuoteNameOfficial,\n    };\n\n    return (\n      <div className=\"cards\">\n        {quotesChunkedToRows.map((chunk, index) => (\n          <div key={`chunk-${index}`} className=\"cards-row\">\n            {chunk.map(({ name, result: amount }) => (\n              <Card\n                key={name}\n                quoteRequest={request}\n                quote={{ serviceName: name, amount }}\n                details={{\n                  ...cardDetails[name],\n                  isTopQuote: index === 0,\n                  ...(index === 0 && { bestQuote: bestQuoteDetails }),\n                }}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default Cards;\n","export function chunk(array, size) {\n  return [...Array(Math.ceil(array.length / size))].map((_, index) =>\n    array.slice(index * size, (index + 1) * size)\n  );\n}\n","import React, { useState } from \"react\";\n\nimport QuoteForm from \"./QuoteForm\";\nimport Cards from \"./Cards\";\n\nconst Quotes = () => {\n  const [quotes, setQuotes] = useState({ request: {}, response: [] });\n  console.log(\"Quotes\", quotes);\n\n  return (\n    <>\n      <QuoteForm handleData={setQuotes} />\n      <Cards data={quotes} />\n    </>\n  );\n};\n\nexport default Quotes;\n","import React from \"react\";\n\nimport Quotes from \"./components/Quotes\";\n\nimport \"./css/App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quotes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/reset.scss\";\nimport \"./css/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}